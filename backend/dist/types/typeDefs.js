var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { gql } from 'apollo-server-express';
export var typeDefs = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\ntype signUpType {\n  userId: String,\n  userName: String,\n  name: String,\n  password: String,\n  email: String,\n  message: String,\n}\ninput signUpInput {\n  userId: String,\n  userName: String,\n  name: String, \n  password: String, \n  email: String,\n  message: String,\n}\ntype signInType {\n  userId: String,\n  name: String, \n  password: String,\n  email: String\n  message: String,\n  userName: String,\n}\ninput signInInput {\n  userId: String,\n  name: String, \n  password: String, \n  email: String,\n  message: String,\n  userName: String,\n}\ntype Message {\n  message:String,\n  userId: String, \n  userName: String,\n}\ntype Query {\n  signOut: Message\n  check: Message\n}\ntype Mutation {\n  signUp(input: signUpInput): signUpType\n  signIn(input: signInInput ): signInType\n}\n"], ["\ntype signUpType {\n  userId: String,\n  userName: String,\n  name: String,\n  password: String,\n  email: String,\n  message: String,\n}\ninput signUpInput {\n  userId: String,\n  userName: String,\n  name: String, \n  password: String, \n  email: String,\n  message: String,\n}\ntype signInType {\n  userId: String,\n  name: String, \n  password: String,\n  email: String\n  message: String,\n  userName: String,\n}\ninput signInInput {\n  userId: String,\n  name: String, \n  password: String, \n  email: String,\n  message: String,\n  userName: String,\n}\ntype Message {\n  message:String,\n  userId: String, \n  userName: String,\n}\ntype Query {\n  signOut: Message\n  check: Message\n}\ntype Mutation {\n  signUp(input: signUpInput): signUpType\n  signIn(input: signInInput ): signInType\n}\n"]))); // const typeDefs = loadSchemaSync(path.join(__dirname, './schema.graphql'));
var templateObject_1;
